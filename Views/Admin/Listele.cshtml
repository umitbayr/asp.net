@model IEnumerable<Login.Entities.UserAccount>  // Sayfada kullanılacak olan modelin türü belirtildi. Bu, UserAccount türünden bir koleksiyondur.
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
@{
    ViewData["Title"] = "Listele";  // Sayfa başlığını "Listele" olarak belirledik.
    Layout = "~/Views/Shared/_AdminLayout.cshtml";  // Bu sayfa için kullanılacak olan layout dosyasını belirtir.

}

@if (ViewBag.Message != null)  // Eğer ViewBag'de Message varsa, başarılı bir işlem yapılmış demektir.
{
    <div class="alert alert-success">
        <!-- Başarı mesajını kullanıcıya göstermek için uyarı kutusu oluşturuluyor. -->
        @ViewBag.Message  <!-- ViewBag'deki mesaj ekrana yazdırılıyor. -->
    </div>
}

<!-- Kullanıcıları listeleyecek olan tabloyu başlatıyoruz. -->
<table class="table">
    <thead>
        <tr>
            <th><input type="text" class="form-control column-search" data-column="0" placeholder="ID Ara"></th>
            <th><input type="text" class="form-control column-search" data-column="1" placeholder="Ad Ara"></th>
            <th><input type="text" class="form-control column-search" data-column="2" placeholder="Soyad Ara"></th>
            <th><input type="text" class="form-control column-search" data-column="3" placeholder="Email Ara"></th>
            <th><input type="text" class="form-control column-search" data-column="4" placeholder="Kullanıcı Adı Ara"></th>
            <th><input type="text" class="form-control column-search" data-column="5" placeholder="Email Onayı Ara" style="width:155px"></th>
            <th><input type="text" class="form-control column-search" data-column="6" placeholder="Rol Ara"></th>
        </tr>
        <tr>
            <!-- Tablo başlıklarını tanımlıyoruz. Her biri kullanıcı bilgilerinin bir özelliğini temsil eder. -->
            <th>Id</th>
            <th>Ad</th>
            <th>Soyad</th>
            <th>Email</th>
            <th>Kullanıcı Adı</th>
            <th>Email Onayı</th>
            <th>Rol</th>
            <th>İşlemler</th>
        </tr>
    </thead>
    <tbody id="userList">
        @await Html.PartialAsync("_UserListPartial", Model)  <!-- Sayfanın başlangıç verilerini (modeli) "_UserListPartial" adındaki partial view ile listeleyip, tbody kısmına yüklüyoruz. -->
    </tbody>
</table>

@section scripts {
      

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>  

    <script>
        $(document).ready(function () {  // Sayfa tamamen yüklendikten sonra çalışacak fonksiyon.

            // sütun bazlı arama
            $('.column-search').on('keyup', function () {
                var columnIndex = $(this).data('column');
                var searchText = $(this).val();  // Arama kutusundaki metni alıyoruz.
                

                $.ajax({
                    url: '/Admin/Arama',  // AdminController'daki Arama metoduna GET isteği gönderiyoruz.
                    type: 'GET',
                    data: { search: searchText , columnIndex: columnIndex},  // Arama metnini server'a gönderiyoruz.
                    success: function (data) {
                        $('#userList').html(data);  // Dönen yeni veriyi (kullanıcı listesini) <tbody id="userList"> içine yerleştiriyoruz.
                    }
                });
            });

            // Düzenle ve Sil butonları için event delegation kullanıyoruz. Çünkü bu butonlar AJAX ile yüklendiği için normal jQuery seçicileri ile işleme almak mümkün olmaz.
            $(document).on('click', '.btn-primary', function () {
                var userId = $(this).data('id');  // Düzenle butonundan UserId'yi alıyoruz.
                confirmEdit(userId);  // Kullanıcıyı düzenleme işlemini başlatıyoruz.
            });

            $(document).on('click', '.btn-danger', function () {
                var userId = $(this).data('id');  // Silme butonundan UserId'yi alıyoruz.
                confirmDelete(userId);  // Kullanıcıyı silme işlemini başlatıyoruz.
            });
        });

        // Düzenleme işlemine dair onay penceresi fonksiyonu
        function confirmEdit(userId) {
            Swal.fire({
                title: "Emin misiniz?",  // Kullanıcıya düzenlemeyi onaylatıyoruz.
                text: "Bu kullanıcıyı düzenlemek istiyor musunuz?",
                icon: "question",
                showCancelButton: true,
                confirmButtonText: "Evet",
                cancelButtonText: "Hayır",
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33"
            }).then((result) => {
                if (result.isConfirmed) {  // Eğer kullanıcı "Evet" derse, düzenleme sayfasına yönlendirilir.
                    window.location.href = '/Admin/Guncelle/' + userId;
                }
            });
        }

        // Silme işlemine dair onay penceresi fonksiyonu
        function confirmDelete(userId) {
            Swal.fire({
                title: "Emin misiniz?",  // Kullanıcıya silmeyi onaylatıyoruz.
                text: "Bu kullanıcıyı silmek istiyor musunuz?",
                icon: "warning",
                showCancelButton: true,
                confirmButtonText: "Evet, sil",
                cancelButtonText: "Hayır",
                confirmButtonColor: "#d33",
                cancelButtonColor: "#3085d6"
            }).then((result) => {
                if (result.isConfirmed) {  // Eğer kullanıcı "Evet" derse, silme işlemi yapılır.
                    window.location.href = '/Admin/Sil/' + userId;  // Kullanıcıyı silme işlemi yapılacak sayfaya yönlendirilir.
                }
            });
        }
    </script>
}
